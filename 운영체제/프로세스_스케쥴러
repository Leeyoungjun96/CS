# 프로세스
• 실행 중인 프로그램은 프로세스라고 함
    • 프로세스 : 메모리에 올려져서, 실행 중인 프로그램
    • 코드 이미지(바이너리) : 실행 파일 ex) ELF format
    • 응용 프로그램 != 프로세스
        • 응용 프로그램은 여러 개의 프로세스로 이루어질 수 있음
    • 하나의 응용 프로그램은 여러 개의 프로세스(프로그램)가 상호작용을 하면서 실행될 수도 있음

## 스케쥴러와 프로세스
• 스케쥴러 : 프로세스 실행을 관리

## 스케쥴링 알고리즘
• 목표 : 시분할 시스템 ex) 프로세스 응답 시간을 가능한 짧게
        멀티 프로그래밍 ex) CPU 활용도를 최대한 높혀서, 프로세스를 빨리 실행

• FIFO 스케쥴러
    • 프로세스가 저장매체를 읽는 다든지, 프린팅을 한다든지 하는 작업 없이, CPU를 처음부터 끝까지 쭉 사용
    • 가장 간단한 스케쥴러 ( 배치 처리 시스템 )
    • FCFS ( First Come First Served ) 스케쥴러
    • 준비 큐 -> 프로세서(CPU) -> 완료

• 최단 작업 우선(SJF) 스케쥴러
    • SJF(Shortest Job First) 스케쥴러
    • 가장 프로세스 실행시간이 짧은 프로세스부터 먼저 실행을 시키는 알고리즘

• RealTime OS(RTOS) : 응용 프로그램 실시간 성능 보장을 목표로 하는 OS
    • 정확하게 프로그램 시작, 완료 시간을 보장
    • Hardware RTOS, Software RTOS
• General Purpose OS(GPOS)
    • 프로세스 실행시간에 민감하지 않고, 일반적인 목적으로 사용되는 OS ex) Windows, Linux

• 우선순위 기반 스케쥴러 ( Priority-Based )
    • 정적 우선순위
        • 프로세스마다 우선순위를 미리 지정
    • 동적 우선순위
        • 스케쥴러가 상황에 따라 우선순위를 동적으로 변경

• Round Robin 스케쥴러
    • 매번 현재 실행중인 프로세스를 ready queue에 보내고 가장 오랫동안 대기하고 있는 프로세스를 선택
    • ex) Process    ->     CPU
         3 3 2 2 2 1 ->  1 2 3 2 3 2